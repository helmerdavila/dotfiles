GREEN="\033[1;32m"
NOCOLOR="\033[0m"

function exist() {
  command -v "$1" >/dev/null 2>&1
}

{{- if eq .chezmoi.os "linux" }}
{{-   if (or (eq .chezmoi.osRelease.id "ubuntu") (eq .chezmoi.osRelease.id "linuxmint")) }}
APPS_PATH="{{ .chezmoi.homeDir }}/.local/bin"
ZSH_LATEST_GH=$(curl -Ls https://api.github.com/repos/cli/cli/releases/latest | grep 'tag_name' | cut -d'v' -f2 | cut -d'"' -f1)

function zsh_wget_install {
  printf "${GREEN} üì¶ Installing wget...\n${NOCOLOR}"
  sudo apt install wget
}

function zsh_gh_install {
  printf "${GREEN} üì¶ Installing/Updating GH...\n${NOCOLOR}"
  local GH_PATH=$HOME/githubcli.deb
  wget -O $GH_PATH https://github.com/cli/cli/releases/download/v${ZSH_LATEST_GH}/gh_${ZSH_LATEST_GH}_linux_amd64.deb
  sudo dpkg -i $GH_PATH
  rm $GH_PATH
}

function zsh_alacritty_install {
  printf "${GREEN} üì¶ Installing Alacritty...\n${NOCOLOR}"
  sudo add-apt-repository ppa:aslatter/ppa
  sudo apt install alacritty
}

function zshinstall_all {
  zsh_wget_install
  zsh_gh_install
  # Refresh shell
  printf "${GREEN} üì¶ Reloading shell...\n${NOCOLOR}"
  source $HOME/.zshrc
}

alias zshinstall=zshinstall_all

{{-   else if eq .chezmoi.osRelease.id "fedora" }}
function zsh_gh_install {
  printf "${GREEN} üì¶ Installing/Updating GH...\n${NOCOLOR}"
  sudo dnf install 'dnf-command(config-manager)'
  sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
  sudo dnf install gh
}

function zshinstall_all {
  zsh_gh_install
  # Refresh shell
  printf "${GREEN} üì¶ Reloading shell...\n${NOCOLOR}"
  source $HOME/.zshrc
}

alias zshinstall=zshinstall_all
{{- end }}

{{- else if eq .chezmoi.os "darwin" }}
function zshinstall_all_macos {
  source $HOME/.zshrc
  # Refresh shell
  printf "${GREEN} üì¶ Reloading shell...\n${NOCOLOR}"
  source $HOME/.zshrc
}

function zshupdate_all_macos {
  brew update
  # Refresh shell
  printf "${GREEN} üì¶ Reloading shell...\n${NOCOLOR}"
  source $HOME/.zshrc
}

alias zshupdate=zshupdate_all_macos
alias zshinstall=zshinstall_all_macos
{{- end }}

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

# Locales
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
# Path to your oh-my-zsh installation.
export ZSH="{{ .chezmoi.homeDir }}/.oh-my-zsh"
# =============================== PATHS ===============================
export PATH=$HOME/bin:$PATH
export PATH=/usr/local/bin:$PATH
# Mostly used in Linux
export PATH=$HOME/.local/bin:$PATH
# Rust and cargo path
export PATH=$HOME/.cargo/bin:$PATH
# Tfenv path
export PATH=$HOME/.tfenv/bin:$PATH
{{ if (eq .chezmoi.os "darwin") }}
{{ if (eq .chezmoi.arch "arm64") }}
export PATH=/opt/homebrew/bin:$PATH
export PATH=/opt/homebrew/sbin:$PATH
{{ end }}
{{ end }}
#export BAT_THEME="OneHalfLight"
export BAT_THEME="Catppuccin-frappe"
# Used by tmux
export TERM="xterm-256color"
# FZF default search engine (requires ripgrep)
export FZF_COMPLETION_TRIGGER="~~"
export FZF_DEFAULT_COMMAND="rg --files --hidden --follow --glob '!.git'"
export FZF_DEFAULT_OPTS="--height=40% --layout=reverse --info=inline --border --margin=1 --padding=1"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# ZSH config
export DISABLE_AUTO_UPDATE=true

EDITOR=vim

# ZSH Vi Mode cursor
function zvm_config {
  ZVM_CURSOR_STYLE_ENABLED=false
  ZVM_VI_INSERT_ESCAPE_BINDKEY=jj
}

plugins=(
    aliases
    colored-man-pages
    composer
    docker
    docker-compose
    fast-syntax-highlighting
    gh
    git
    jsontools
    npm
    rbenv
    ruby
    terraform
    tmux
    volta
    zsh-better-npm-completion
    zsh-autosuggestions
    zsh-vi-mode
)

if exist eza; then
  plugins=($plugins zsh-aliases-eza)
fi

{{ if (eq .chezmoi.os "linux") }}
# ssh autoload, should be before sourcing ohmyzsh
if [ -f "$HOME/.ssh/id_ed25519" ]; then
  plugins=($plugins ssh-agent)
  zstyle :omz:plugins:ssh-agent identities id_ed25519
else
  zstyle :omz:plugins:ssh-agent lazy yes
  zstyle :omz:plugins:ssh-agent quiet yes
fi
{{ else if (eq .chezmoi.os "darwin") }}
# Composer
export COMPOSER_MEMORY_LIMIT=-1
export PATH=$HOME/.jetbrains:$PATH
export PATH=$HOME/.composer/vendor/bin:$PATH
{{ end }}

source $ZSH/oh-my-zsh.sh

# cht.sh completion
# Install (and create file) with curl https://cht.sh/:cht.sh > "$HOME/bin/cht.sh"
# and then chmod +x "$HOME/bin/cht.sh"
# Create a file in ~/.zsh.d/_cht
fpath=(~/.zsh.d/ $fpath)


function npm_ci_install {
    npm ci
    touch ./node_modules/.metadata_never_index
}

{{- if (eq .chezmoi.os "darwin") }}
alias nzshconfig="nvim ~/.zshrc"
alias ntmuxconfig="nvim ~/.tmux.conf"
alias brew-all="brew services list"
alias brew-start="brew services start"
alias brew-stop="brew services stop"

function npm_yarn_install {
    if [ -f yarn.lock ]; then
        yarn install $@
    else
        npm install $@
    fi
    touch ./node_modules/.metadata_never_index
}

function npm_yarn_remove {
    if [ -f yarn.lock ]; then
        yarn remove $@
    else
        npm uninstall $@
    fi
    touch ./node_modules/.metadata_never_index
}

function npm_yarn_add {
    if [ -f yarn.lock ]; then
        yarn add $@
    else
        npm install $@ --save
    fi
    touch ./node_modules/.metadata_never_index
}

alias hci=npm_ci_install
alias hinstall=npm_yarn_install
alias hadd=npm_yarn_add
alias hremove=npm_yarn_remove
{{- end }}

# It only works inside of tmux sessions
function tmux_focus_fancy {
  tmux splitw -h -b
  tmux splitw -h
  tmux send-keys -t 1 cmatrix Enter
  tmux send-keys -t 3 cmatrix Enter
  tmux select-layout even-horizontal
  tmux resize-pane -t 1 -x 20%
  tmux resize-pane -t 3 -x 20%
  clear
}

function git_checkout_fzf {
  git branch | grep -v "^\*" | fzf --height=20% --reverse --info=inline | xargs git checkout
}

function tmux_focus_real {
  tmux splitw -h -b
  tmux splitw -h
  tmux clock-mode -t 1
  tmux clock-mode -t 3
  tmux select-layout even-horizontal
  tmux resize-pane -t 1 -x 20%
  tmux resize-pane -t 3 -x 20%
  clear
}

function tmux_unfocus {
  tmux kill-pane -t 3
  tmux kill-pane -t 1
  clear
}

alias tfocusf=tmux_focus_fancy
alias tfocus=tmux_focus_real
alias tunfocus=tmux_unfocus

alias hc="eza -l -a --icons --git --octal-permissions"
alias hdoc="cht.sh"
alias hgco=git_checkout_fzf
# Alacritty config
alias alacrittyconfig="vim ~/.config/alacritty/alacritty.yml"
# Lazygit
alias lg="lazygit"
# Bat aliases for different theme
alias batl="bat --theme=Catppuccin-latte"
alias batd="bat --theme=Catppuccin-frappe"
# --
alias cup="composer outdated --outdated --direct"
# Use fzf + Bat
alias fzfbl="fzf --preview 'bat --theme=Catppuccin-latte --style=numbers --color=always --line-range :500 {}'"
alias fzfbd="fzf --preview 'bat --theme=Catppuccin-frappe --style=numbers --color=always --line-range :500 {}'"
# --
# Kitty aliases
alias kittyl2="kitty +kitten themes --reload-in=all Modus Operandi Tinted"
alias kittyl="kitty +kitten themes --reload-in=all Ros√© Pine Dawn"
alias kittyd="kitty +kitten themes --reload-in=all Night Owl"
# --
# SSH aliases
alias ssh-create-ed="ssh-keygen -t ed25519 -C '11061182+helmerdavila@users.noreply.github.com'"
alias ssh-create-rsa="ssh-keygen -t rsa -b 4096 -C '11061182+helmerdavila@users.noreply.github.com'"
# Gotop
alias gotopl="gotop -c default-dark"
# --
alias p10kconfig="vim ~/.p10k.zsh"
alias tmuxconfig="vim ~/.tmux.conf"
alias pn="pnpm"
alias zr="source ~/.zshrc"
alias zshconfig="vim ~/.zshrc"
# Vim aliases
alias vpi="vim +\":PlugInstall --sync\" +qa"
alias vpu="vim +\":PlugUpdate --sync\" +qa"
alias vpc="vim +\":PlugClean\" +qa"
alias vc="$EDITOR ~/.vimrc"
alias vcc="$EDITOR ~/.ovimrc"
alias nvc="$EDITOR ~/.config/nvim"
alias nnc="nvim ~/.config/nvim"

# Laravel aliases
alias sail='[ -f sail ] && bash sail || bash vendor/bin/sail'
alias pint='[ -f pint ] && bash pint || bash vendor/bin/pint'
alias art="php artisan"

{{- if (eq .chezmoi.os "linux") }}
# Openvpn aliases
alias vpnimport="openvpn3 config-import --config $1 --name $2"
alias vpnstart="openvpn3 session-start --config $1"
alias vpnstop="openvpn3 session-manage --disconnect --config $1"
{{-   if (or (eq .chezmoi.osRelease.id "ubuntu") (eq .chezmoi.osRelease.id "linuxmint")) }}
# Should be only WSL here
alias pbcopy="clip.exe"
alias pbpaste="powershell.exe -command 'Get-Clipboard' | head -n -1"
{{-   end }}
{{- end }}

ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT

{{ if (eq .chezmoi.os "darwin") }}
# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/__tabtab.zsh ]] && . ~/.config/tabtab/__tabtab.zsh || true
{{ end }}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Volta configuration
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# Starship
eval "$(starship init zsh)"

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
source <(fzf --zsh)

# Personal commands for different companies
[ -f ~/.personal.zsh ] && source ~/.personal.zsh
